---
import BaseLayout from "../layouts/BaseLayout.astro";
import Newsletter from "../components/NewsLetter.astro";
import { getCollection } from "astro:content";

const allPosts = await getCollection("blog", ({ data }) => {
  return !data.draft;
});

const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const recentPosts = sortedPosts.slice(0, 3);
---

<BaseLayout
  title="Sayantan's Blog"
  description="A software developer's thoughts on tech and life"
>
  <div class="max-w-4xl mx-auto px-4 py-12">
    <!-- Hero Section -->
    <section class="text-center mb-16">
      <h1 class="text-5xl font-header font-bold mb-6">
        Hey, I'm <span class="text-blue-600">Sayantan</span>
      </h1>
      <p
        class="text-xl font-blog text-gray-600 dark:text-gray-400 mb-8 max-w-2xl mx-auto"
      >
        Software developer sharing insights about technology, coding, and life.
        Welcome to my corner of the internet.
      </p>
      <div class="flex justify-center gap-4">
        <a
          href="/blogs"
          class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"
        >
          Read My Blog
        </a>
        <a
          href="/rss.xml"
          class="border border-gray-300 dark:border-gray-600 px-6 py-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors"
        >
          Subscribe RSS
        </a>
      </div>
    </section>

    <!-- Newsletter Signup -->
    <Newsletter />

    <!-- Recent Posts -->
    <section>
      <h2 class="text-3xl font-header font-bold mb-8">Recent Posts</h2>
      <div class="grid gap-8">
        {
          recentPosts.map((post) => (
            <article class="border border-gray-200 dark:border-gray-700 rounded-lg p-6 hover:shadow-lg transition-shadow">
              <div class="mb-3">
                <span class="inline-block bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-sm font-medium capitalize">
                  {post.data.category}
                </span>
              </div>

              <h3 class="text-lg font-semibold mb-2">
                <a
                  href={`/blogs/${post.id}`}
                  class="hover:text-blue-600 transition-colors"
                >
                  {post.data.title}
                </a>
              </h3>

              <p class="text-gray-600 font-blog dark:text-gray-400 mb-4">
                {post.data.description}
              </p>

              <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-500">
                <time datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </time>

                {post.data.tags.length > 0 && (
                  <div class="flex gap-2 italic">
                    {post.data.tags.slice(0, 3).map((tag) => (
                      <span class="text-xs">#{tag}</span>
                    ))}
                  </div>
                )}
              </div>
            </article>
          ))
        }
      </div>

      {
        sortedPosts.length > 3 && (
          <div class="text-center mt-8">
            <a
              href="/blogs"
              class="text-blue-600 hover:text-blue-700 font-medium"
            >
              View all posts â†’
            </a>
          </div>
        )
      }
    </section>
  </div>
</BaseLayout>
