---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

const allPosts = await getCollection("blog", ({ data }) => {
  return !data.draft;
});

const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Group posts by category
const postsByCategory = sortedPosts.reduce(
  (acc, post) => {
    const category = post.data.category;
    if (!acc[category]) acc[category] = [];
    acc[category].push(post);
    return acc;
  },
  {} as Record<string, typeof sortedPosts>
);
---

<BaseLayout
  title="All Posts - Sayantan's Blog"
  description="All blog posts about technology, coding, and personal thoughts"
>
  <div class="max-w-4xl mx-auto px-4 py-12">
    <header class="mb-12">
      <h1 class="text-4xl font-bold mb-4">All Posts</h1>
      <p class="text-gray-600 dark:text-gray-400">
        {sortedPosts.length} posts about technology, coding, and life
      </p>
    </header>

    <div class="space-y-12">
      {
        Object.entries(postsByCategory).map(([category, posts]) => (
          <section>
            <h2 class="text-2xl font-semibold mb-6 capitalize flex items-center">
              <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-sm font-medium mr-3">
                {category}
              </span>
              {posts.length} posts
            </h2>

            <div class="grid gap-6">
              {posts.map((post) => (
                <article class="border border-gray-200 dark:border-gray-700 rounded-lg p-6 hover:shadow-lg transition-shadow">
                  <h3 class="text-xl font-semibold mb-2">
                    <a
                      href={`/blog/${post.slug}`}
                      class="hover:text-blue-600 transition-colors"
                    >
                      {post.data.title}
                    </a>
                  </h3>

                  <p class="text-gray-600 dark:text-gray-400 mb-4">
                    {post.data.description}
                  </p>

                  <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-500">
                    <time datetime={post.data.pubDate.toISOString()}>
                      {post.data.pubDate.toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })}
                    </time>

                    {post.data.tags.length > 0 && (
                      <div class="flex gap-2">
                        {post.data.tags.map((tag) => (
                          <span class="text-xs">#{tag}</span>
                        ))}
                      </div>
                    )}
                  </div>
                </article>
              ))}
            </div>
          </section>
        ))
      }
    </div>
  </div>
</BaseLayout>
